<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structpars_1_1ev_1_1hf__registry" kind="struct" language="C++" prot="public">
    <compoundname>pars::ev::hf_registry</compoundname>
    <includes refid="hf__registry_8h" local="no">hf_registry.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structpars_1_1ev_1_1hf__registry_1af449b50921b27b730c3cfeda9a90350d" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend pars::ev::hf_registry::runner</definition>
        <argsstring></argsstring>
        <name>runner</name>
        <qualifiedname>pars::ev::hf_registry::runner</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="78" column="10" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpars_1_1ev_1_1hf__registry_1a65d1029a85cb585d67ff554fec6b5fe2" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex pars::ev::hf_registry::mtx_m</definition>
        <argsstring></argsstring>
        <name>mtx_m</name>
        <qualifiedname>pars::ev::hf_registry::mtx_m</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="115" column="14" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpars_1_1ev_1_1hf__registry_1a4e15a0fb205948ff243b4bc820ec82a9" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; int, std::unordered_map&lt; std::size_t, <ref refid="namespacepars_1_1ev_1a00ecaf1d503708d125b0a5f259ceea13" kindref="member">job_handler_f</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;int, std::unordered_map&lt;std::size_t, job_handler_f&gt; &gt; pars::ev::hf_registry::handlers_m</definition>
        <argsstring></argsstring>
        <name>handlers_m</name>
        <qualifiedname>pars::ev::hf_registry::handlers_m</qualifiedname>
        <briefdescription>
<para>protects handlers_m, types_m </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespacepars_1_1ev_1a00ecaf1d503708d125b0a5f259ceea13" kindref="member">job_handler_f</ref> of a spec hash </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="117" column="5" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpars_1_1ev_1_1hf__registry_1ab3c4aa502195c971b4f3bde2ddfbfabd" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::size_t, const std::type_info * &gt;</type>
        <definition>std::unordered_map&lt;std::size_t, const std::type_info*&gt; pars::ev::hf_registry::types_m</definition>
        <argsstring></argsstring>
        <name>types_m</name>
        <qualifiedname>pars::ev::hf_registry::types_m</qualifiedname>
        <briefdescription>
<para>type_info of a spec hash, for debugging purpose only </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="119" column="5" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpars_1_1ev_1_1hf__registry_1a95e42b3a5122d85ba28862cb0bbad825" prot="private" static="no" mutable="no">
        <type><ref refid="structpars_1_1ev_1_1runner" kindref="compound">runner</ref> &amp;</type>
        <definition>runner&amp; pars::ev::hf_registry::runner_m</definition>
        <argsstring></argsstring>
        <name>runner_m</name>
        <qualifiedname>pars::ev::hf_registry::runner_m</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="121" column="10" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="121" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structpars_1_1ev_1_1hf__registry_1a55c88e8f8b3dbefd1d6739d023632835" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pars::ev::hf_registry::hf_registry</definition>
        <argsstring>(runner &amp;r)</argsstring>
        <name>hf_registry</name>
        <qualifiedname>pars::ev::hf_registry::hf_registry</qualifiedname>
        <param>
          <type><ref refid="structpars_1_1ev_1_1runner" kindref="compound">runner</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="52" column="3" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1hf__registry_1ad8e4eac6e124f05d3bc86ba167bf1299" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>kind_of</declname>
            <defname>kind_of</defname>
          </param>
          <param>
            <type>ev::event_c</type>
            <declname>event_t</declname>
            <defname>event_t</defname>
          </param>
          <param>
            <type>typename class_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void pars::ev::hf_registry::on</definition>
        <argsstring>(void(class_t::*mem_fn)(hf_arg&lt; kind_of, event_t &gt;), class_t *self)</argsstring>
        <name>on</name>
        <qualifiedname>pars::ev::hf_registry::on</qualifiedname>
        <param>
          <type>void(class_t::*)(<ref refid="namespacepars_1_1ev_1ada8ba2faa8e8f8b6a385eb2156e52613" kindref="member">hf_arg</ref>&lt; kind_of, event_t &gt;)</type>
          <declname>mem_fn</declname>
        </param>
        <param>
          <type>class_t *</type>
          <declname>self</declname>
        </param>
    <requiresclause>ev::kind_c&lt;kind_of&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="60" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="60" bodyend="63"/>
        <references refid="structpars_1_1ev_1_1hf__registry_1ade1f24a6befdc5df33d9b3bc7d6aaba0" compoundref="hf__registry_8h" startline="67" endline="70">insert</references>
        <references refid="namespacepars_1_1ev_1a5ae21c09902e125632b0c4f37e20a07a" compoundref="make__hf_8h" startline="58" endline="89">pars::ev::make_hf</references>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1hf__registry_1ade1f24a6befdc5df33d9b3bc7d6aaba0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>kind_of</declname>
            <defname>kind_of</defname>
          </param>
          <param>
            <type>event_c</type>
            <declname>event_t</declname>
            <defname>event_t</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void pars::ev::hf_registry::insert</definition>
        <argsstring>(handler_f&lt; kind_of, event_t &gt; hf)</argsstring>
        <name>insert</name>
        <qualifiedname>pars::ev::hf_registry::insert</qualifiedname>
        <param>
          <type><ref refid="namespacepars_1_1ev_1a775df579549c610e3e2c8dae429f129c" kindref="member">handler_f</ref>&lt; kind_of, event_t &gt;</type>
          <declname>hf</declname>
        </param>
    <requiresclause>kind_c&lt;kind_of&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="67" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="67" bodyend="70"/>
        <references refid="structpars_1_1ev_1_1hf__registry_1ade1f24a6befdc5df33d9b3bc7d6aaba0" compoundref="hf__registry_8h" startline="67" endline="70">insert</references>
        <referencedby refid="structpars_1_1ev_1_1hf__registry_1ade1f24a6befdc5df33d9b3bc7d6aaba0" compoundref="hf__registry_8h" startline="67" endline="70">insert</referencedby>
        <referencedby refid="structpars_1_1ev_1_1hf__registry_1ad8e4eac6e124f05d3bc86ba167bf1299" compoundref="hf__registry_8h" startline="60" endline="63">on</referencedby>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1hf__registry_1aa49457624813a0936277091b08fb5215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>kind_of</declname>
            <defname>kind_of</defname>
          </param>
          <param>
            <type>event_c</type>
            <declname>event_t</declname>
            <defname>event_t</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void pars::ev::hf_registry::insert</definition>
        <argsstring>(int s_id, handler_f&lt; kind_of, event_t &gt; hf)</argsstring>
        <name>insert</name>
        <qualifiedname>pars::ev::hf_registry::insert</qualifiedname>
        <param>
          <type>int</type>
          <declname>s_id</declname>
        </param>
        <param>
          <type><ref refid="namespacepars_1_1ev_1a775df579549c610e3e2c8dae429f129c" kindref="member">handler_f</ref>&lt; kind_of, event_t &gt;</type>
          <declname>hf</declname>
        </param>
    <requiresclause>kind_c&lt;kind_of&gt;    </requiresclause>
        <briefdescription>
<para>Insert an <ref refid="namespacepars_1_1ev_1a775df579549c610e3e2c8dae429f129c" kindref="member">handler_f</ref> for a kind_of&lt;event_t&gt; on a socket s_id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="75" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry__insert.h" bodystart="40" bodyend="73"/>
        <references refid="classpars_1_1ev_1_1job_1afce2c813eadb6e5471e026fa0b4fbaaf" compoundref="job_8h" startline="68" endline="71">pars::ev::job::event</references>
        <references refid="classpars_1_1ev_1_1job_1a41155821180189773234cab1826b8ab3" compoundref="job_8h" startline="89" endline="89">pars::ev::job::id</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="structpars_1_1ev_1_1hf__registry_1ae322a41c65296eabf259043c68998000" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto pars::ev::hf_registry::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <qualifiedname>pars::ev::hf_registry::lock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="80" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1hf__registry_1aeb7247422a982dfff59c9790497fad52" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pars::ev::hf_registry::has_handler_for</definition>
        <argsstring>(int s_id, std::size_t spec_hash)</argsstring>
        <name>has_handler_for</name>
        <qualifiedname>pars::ev::hf_registry::has_handler_for</qualifiedname>
        <param>
          <type>int</type>
          <declname>s_id</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>spec_hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="82" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1hf__registry_1ae58ce5d65f318a09383e0ac2c5e790bc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::type_info *const</type>
        <definition>const std::type_info *const pars::ev::hf_registry::type_for</definition>
        <argsstring>(std::size_t spec_hash)</argsstring>
        <name>type_for</name>
        <qualifiedname>pars::ev::hf_registry::type_for</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>spec_hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="87" column="30" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1hf__registry_1a10a1078f691f3475dae9932dba015b40" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacepars_1_1ev_1a00ecaf1d503708d125b0a5f259ceea13" kindref="member">job_handler_f</ref> &amp;</type>
        <definition>const job_handler_f &amp; pars::ev::hf_registry::handler_for</definition>
        <argsstring>(int s_id, std::size_t spec_hash)</argsstring>
        <name>handler_for</name>
        <qualifiedname>pars::ev::hf_registry::handler_for</qualifiedname>
        <param>
          <type>int</type>
          <declname>s_id</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>spec_hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="92" column="23" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1hf__registry_1a76d9cba74173bab2c73b09c679d09b82" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>kind_of</declname>
            <defname>kind_of</defname>
          </param>
          <param>
            <type>event_c</type>
            <declname>event_t</declname>
            <defname>event_t</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto pars::ev::hf_registry::insert_jhf</definition>
        <argsstring>(int s_id, job_handler_f hf)</argsstring>
        <name>insert_jhf</name>
        <qualifiedname>pars::ev::hf_registry::insert_jhf</qualifiedname>
        <param>
          <type>int</type>
          <declname>s_id</declname>
        </param>
        <param>
          <type><ref refid="namespacepars_1_1ev_1a00ecaf1d503708d125b0a5f259ceea13" kindref="member">job_handler_f</ref></type>
          <declname>hf</declname>
        </param>
    <requiresclause>kind_c&lt;kind_of&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="99" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="99" bodyend="113"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" line="49" column="1" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h" bodystart="50" bodyend="122"/>
    <listofallmembers>
      <member refid="structpars_1_1ev_1_1hf__registry_1a10a1078f691f3475dae9932dba015b40" prot="private" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>handler_for</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1a4e15a0fb205948ff243b4bc820ec82a9" prot="private" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>handlers_m</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1aeb7247422a982dfff59c9790497fad52" prot="private" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>has_handler_for</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1a55c88e8f8b3dbefd1d6739d023632835" prot="public" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>hf_registry</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1ade1f24a6befdc5df33d9b3bc7d6aaba0" prot="public" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>insert</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1aa49457624813a0936277091b08fb5215" prot="public" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>insert</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1a76d9cba74173bab2c73b09c679d09b82" prot="private" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>insert_jhf</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1ae322a41c65296eabf259043c68998000" prot="private" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>lock</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1a65d1029a85cb585d67ff554fec6b5fe2" prot="private" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>mtx_m</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1ad8e4eac6e124f05d3bc86ba167bf1299" prot="public" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>on</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1af449b50921b27b730c3cfeda9a90350d" prot="private" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>runner</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1a95e42b3a5122d85ba28862cb0bbad825" prot="private" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>runner_m</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1ae58ce5d65f318a09383e0ac2c5e790bc" prot="private" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>type_for</name></member>
      <member refid="structpars_1_1ev_1_1hf__registry_1ab3c4aa502195c971b4f3bde2ddfbfabd" prot="private" virt="non-virtual"><scope>pars::ev::hf_registry</scope><name>types_m</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
