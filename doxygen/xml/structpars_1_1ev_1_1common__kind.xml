<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structpars_1_1ev_1_1common__kind" kind="struct" language="C++" prot="public">
    <compoundname>pars::ev::common_kind</compoundname>
    <derivedcompoundref refid="structpars_1_1ev_1_1base__kind_3_01kind__of_00_01event__t_01_4" prot="public" virt="non-virtual">pars::ev::base_kind&lt; kind_of, event_t &gt;</derivedcompoundref>
    <derivedcompoundref refid="structpars_1_1ev_1_1base__kind_3_01kind__of_00_01event__t_01_4" prot="public" virt="non-virtual">pars::ev::base_kind&lt; kind_of, event_t &gt;</derivedcompoundref>
    <derivedcompoundref refid="structpars_1_1ev_1_1base__kind_3_01kind__of_00_01event__t_01_4" prot="public" virt="non-virtual">pars::ev::base_kind&lt; kind_of, event_t &gt;</derivedcompoundref>
    <derivedcompoundref refid="structpars_1_1ev_1_1base__kind_3_01kind__of_00_01event__t_01_4" prot="public" virt="non-virtual">pars::ev::base_kind&lt; kind_of, event_t &gt;</derivedcompoundref>
    <includes refid="kind__base_8h" local="no">kind_base.h</includes>
    <templateparamlist>
      <param>
        <type>template&lt; typename &gt; typename</type>
        <declname>kind_of</declname>
        <defname>kind_of</defname>
      </param>
      <param>
        <type>event_c</type>
        <declname>event_t</declname>
        <defname>event_t</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structpars_1_1ev_1_1common__kind_1a927893fac05943e48256935aecc33979" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename event2_t</type>
          </param>
        </templateparamlist>
        <type>kind_of&lt; event2_t &gt;</type>
        <definition>using pars::ev::common_kind&lt; kind_of, event_t &gt;::kind_type =  kind_of&lt;event2_t&gt;</definition>
        <argsstring></argsstring>
        <name>kind_type</name>
        <qualifiedname>pars::ev::common_kind::kind_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="44" column="3" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpars_1_1ev_1_1common__kind_1ac648f20f1ebff638a4269ea514f0fbcd" prot="public" static="no">
        <type>event_t</type>
        <definition>using pars::ev::common_kind&lt; kind_of, event_t &gt;::event_type =  event_t</definition>
        <argsstring></argsstring>
        <name>event_type</name>
        <qualifiedname>pars::ev::common_kind::event_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="46" column="3" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpars_1_1ev_1_1common__kind_1aedd3fb812f5a8c9a2042cfb498feecb2" prot="public" static="no">
        <type><ref refid="structpars_1_1ev_1_1metadata" kindref="compound">metadata</ref>&lt; kind_of, event_t &gt;</type>
        <definition>using pars::ev::common_kind&lt; kind_of, event_t &gt;::metadata_type =  metadata&lt;kind_of, event_t&gt;</definition>
        <argsstring></argsstring>
        <name>metadata_type</name>
        <qualifiedname>pars::ev::common_kind::metadata_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="48" column="3" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structpars_1_1ev_1_1common__kind_1a983b1216d76d4d50258316becbb0a1bc" prot="protected" static="no" mutable="no">
        <type><ref refid="structpars_1_1ev_1_1common__kind_1ac648f20f1ebff638a4269ea514f0fbcd" kindref="member">event_type</ref></type>
        <definition>event_type pars::ev::common_kind&lt; kind_of, event_t &gt;::event_m</definition>
        <argsstring></argsstring>
        <name>event_m</name>
        <qualifiedname>pars::ev::common_kind::event_m</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="68" column="14" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="68" bodyend="-1"/>
        <referencedby refid="structpars_1_1ev_1_1common__kind_1a23e499a282cc1c382b4e89091c13e1c0" compoundref="kind__base_8h" startline="56" endline="59">pars::ev::common_kind&lt; kind_of, event_t &gt;::as_tuple</referencedby>
        <referencedby refid="structpars_1_1ev_1_1common__kind_1a7dab2655903b1a192ede56d045724164" compoundref="kind__base_8h" startline="61" endline="65">pars::ev::common_kind&lt; kind_of, event_t &gt;::common_kind</referencedby>
        <referencedby refid="structpars_1_1ev_1_1common__kind_1ae439d00f3778920b22670f50812f7e3f" compoundref="kind__base_8h" startline="50" endline="50">pars::ev::common_kind&lt; kind_of, event_t &gt;::event</referencedby>
        <referencedby refid="structpars_1_1ev_1_1common__kind_1add5aa00d0e905af6a5cdde67b3d604c4" compoundref="kind__base_8h" startline="52" endline="52">pars::ev::common_kind&lt; kind_of, event_t &gt;::event</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structpars_1_1ev_1_1common__kind_1a23d1675eec2583a366813be0496d6fed" prot="protected" static="no" mutable="no">
        <type><ref refid="structpars_1_1ev_1_1common__kind_1aedd3fb812f5a8c9a2042cfb498feecb2" kindref="member">metadata_type</ref></type>
        <definition>metadata_type pars::ev::common_kind&lt; kind_of, event_t &gt;::metadata_m</definition>
        <argsstring></argsstring>
        <name>metadata_m</name>
        <qualifiedname>pars::ev::common_kind::metadata_m</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="69" column="17" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="69" bodyend="-1"/>
        <referencedby refid="structpars_1_1ev_1_1common__kind_1a23e499a282cc1c382b4e89091c13e1c0" compoundref="kind__base_8h" startline="56" endline="59">pars::ev::common_kind&lt; kind_of, event_t &gt;::as_tuple</referencedby>
        <referencedby refid="structpars_1_1ev_1_1common__kind_1a7dab2655903b1a192ede56d045724164" compoundref="kind__base_8h" startline="61" endline="65">pars::ev::common_kind&lt; kind_of, event_t &gt;::common_kind</referencedby>
        <referencedby refid="structpars_1_1ev_1_1common__kind_1a8c07d5f7754f25f5a99646c1037ee290" compoundref="kind__base_8h" startline="54" endline="54">pars::ev::common_kind&lt; kind_of, event_t &gt;::metadata</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structpars_1_1ev_1_1common__kind_1ae439d00f3778920b22670f50812f7e3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structpars_1_1ev_1_1common__kind_1ac648f20f1ebff638a4269ea514f0fbcd" kindref="member">event_type</ref> &amp;</type>
        <definition>event_type &amp; pars::ev::common_kind&lt; kind_of, event_t &gt;::event</definition>
        <argsstring>()</argsstring>
        <name>event</name>
        <qualifiedname>pars::ev::common_kind::event</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="50" column="14" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="50" bodyend="50"/>
        <references refid="structpars_1_1ev_1_1common__kind_1a983b1216d76d4d50258316becbb0a1bc" compoundref="kind__base_8h" startline="68">pars::ev::common_kind&lt; kind_of, event_t &gt;::event_m</references>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1common__kind_1add5aa00d0e905af6a5cdde67b3d604c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structpars_1_1ev_1_1common__kind_1ac648f20f1ebff638a4269ea514f0fbcd" kindref="member">event_type</ref> &amp;</type>
        <definition>const event_type &amp; pars::ev::common_kind&lt; kind_of, event_t &gt;::event</definition>
        <argsstring>() const</argsstring>
        <name>event</name>
        <qualifiedname>pars::ev::common_kind::event</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="52" column="20" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="52" bodyend="52"/>
        <references refid="structpars_1_1ev_1_1common__kind_1a983b1216d76d4d50258316becbb0a1bc" compoundref="kind__base_8h" startline="68">pars::ev::common_kind&lt; kind_of, event_t &gt;::event_m</references>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1common__kind_1a8c07d5f7754f25f5a99646c1037ee290" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structpars_1_1ev_1_1common__kind_1aedd3fb812f5a8c9a2042cfb498feecb2" kindref="member">metadata_type</ref> &amp;</type>
        <definition>metadata_type &amp; pars::ev::common_kind&lt; kind_of, event_t &gt;::metadata</definition>
        <argsstring>()</argsstring>
        <name>metadata</name>
        <qualifiedname>pars::ev::common_kind::metadata</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="54" column="17" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="54" bodyend="54"/>
        <references refid="structpars_1_1ev_1_1common__kind_1a23d1675eec2583a366813be0496d6fed" compoundref="kind__base_8h" startline="69">pars::ev::common_kind&lt; kind_of, event_t &gt;::metadata_m</references>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1common__kind_1a23e499a282cc1c382b4e89091c13e1c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; const <ref refid="structpars_1_1ev_1_1common__kind_1ac648f20f1ebff638a4269ea514f0fbcd" kindref="member">event_type</ref> &amp;, <ref refid="structpars_1_1ev_1_1common__kind_1aedd3fb812f5a8c9a2042cfb498feecb2" kindref="member">metadata_type</ref> &amp; &gt;</type>
        <definition>std::tuple&lt; const event_type &amp;, metadata_type &amp; &gt; pars::ev::common_kind&lt; kind_of, event_t &gt;::as_tuple</definition>
        <argsstring>()</argsstring>
        <name>as_tuple</name>
        <qualifiedname>pars::ev::common_kind::as_tuple</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="56" column="14" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="56" bodyend="59"/>
        <references refid="structpars_1_1ev_1_1common__kind_1a983b1216d76d4d50258316becbb0a1bc" compoundref="kind__base_8h" startline="68">pars::ev::common_kind&lt; kind_of, event_t &gt;::event_m</references>
        <references refid="structpars_1_1ev_1_1common__kind_1a23d1675eec2583a366813be0496d6fed" compoundref="kind__base_8h" startline="69">pars::ev::common_kind&lt; kind_of, event_t &gt;::metadata_m</references>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1common__kind_1a7dab2655903b1a192ede56d045724164" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pars::ev::common_kind&lt; kind_of, event_t &gt;::common_kind</definition>
        <argsstring>(event_type e, metadata_type md)</argsstring>
        <name>common_kind</name>
        <qualifiedname>pars::ev::common_kind::common_kind</qualifiedname>
        <param>
          <type><ref refid="structpars_1_1ev_1_1common__kind_1ac648f20f1ebff638a4269ea514f0fbcd" kindref="member">event_type</ref></type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structpars_1_1ev_1_1common__kind_1aedd3fb812f5a8c9a2042cfb498feecb2" kindref="member">metadata_type</ref></type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="61" column="3" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="61" bodyend="65"/>
        <references refid="structpars_1_1ev_1_1common__kind_1a983b1216d76d4d50258316becbb0a1bc" compoundref="kind__base_8h" startline="68">pars::ev::common_kind&lt; kind_of, event_t &gt;::event_m</references>
        <references refid="structpars_1_1ev_1_1common__kind_1a23d1675eec2583a366813be0496d6fed" compoundref="kind__base_8h" startline="69">pars::ev::common_kind&lt; kind_of, event_t &gt;::metadata_m</references>
      </memberdef>
    </sectiondef>
    <requiresclause>kind_c&lt;kind_of&gt;    </requiresclause>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>pars::ev::base_kind&lt; kind_of, event_t &gt;</label>
        <link refid="structpars_1_1ev_1_1base__kind_3_01kind__of_00_01event__t_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>pars::ev::common_kind&lt; kind_of, event_t &gt;</label>
        <link refid="structpars_1_1ev_1_1common__kind"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>event_t</label>
      </node>
      <node id="8">
        <label>pars::ev::base_async_metadata</label>
        <link refid="structpars_1_1ev_1_1base__async__metadata"/>
      </node>
      <node id="4">
        <label>pars::ev::base_internal_metadata</label>
        <link refid="structpars_1_1ev_1_1base__internal__metadata"/>
      </node>
      <node id="7">
        <label>pars::ev::base_network_metadata</label>
        <link refid="structpars_1_1ev_1_1base__network__metadata"/>
      </node>
      <node id="5">
        <label>pars::ev::base_sync_metadata</label>
        <link refid="structpars_1_1ev_1_1base__sync__metadata"/>
      </node>
      <node id="1">
        <label>pars::ev::common_kind&lt; kind_of, event_t &gt;</label>
        <link refid="structpars_1_1ev_1_1common__kind"/>
        <childnode refid="2" relation="usage">
          <edgelabel>event_m</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>metadata_m</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>pars::ev::common_metadata&lt; kind_of, event_t &gt;</label>
        <link refid="structpars_1_1ev_1_1common__metadata"/>
      </node>
      <node id="3">
        <label>pars::ev::metadata&lt; kind_of, event_t &gt;</label>
        <link refid="structpars_1_1ev_1_1metadata_3_01kind__of_00_01event__t_01_4"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" line="41" column="1" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h" bodystart="42" bodyend="70"/>
    <listofallmembers>
      <member refid="structpars_1_1ev_1_1common__kind_1a23e499a282cc1c382b4e89091c13e1c0" prot="public" virt="non-virtual"><scope>pars::ev::common_kind</scope><name>as_tuple</name></member>
      <member refid="structpars_1_1ev_1_1common__kind_1a7dab2655903b1a192ede56d045724164" prot="public" virt="non-virtual"><scope>pars::ev::common_kind</scope><name>common_kind</name></member>
      <member refid="structpars_1_1ev_1_1common__kind_1ae439d00f3778920b22670f50812f7e3f" prot="public" virt="non-virtual"><scope>pars::ev::common_kind</scope><name>event</name></member>
      <member refid="structpars_1_1ev_1_1common__kind_1add5aa00d0e905af6a5cdde67b3d604c4" prot="public" virt="non-virtual"><scope>pars::ev::common_kind</scope><name>event</name></member>
      <member refid="structpars_1_1ev_1_1common__kind_1a983b1216d76d4d50258316becbb0a1bc" prot="protected" virt="non-virtual"><scope>pars::ev::common_kind</scope><name>event_m</name></member>
      <member refid="structpars_1_1ev_1_1common__kind_1ac648f20f1ebff638a4269ea514f0fbcd" prot="public" virt="non-virtual"><scope>pars::ev::common_kind</scope><name>event_type</name></member>
      <member refid="structpars_1_1ev_1_1common__kind_1a927893fac05943e48256935aecc33979" prot="public" virt="non-virtual"><scope>pars::ev::common_kind</scope><name>kind_type</name></member>
      <member refid="structpars_1_1ev_1_1common__kind_1a8c07d5f7754f25f5a99646c1037ee290" prot="public" virt="non-virtual"><scope>pars::ev::common_kind</scope><name>metadata</name></member>
      <member refid="structpars_1_1ev_1_1common__kind_1a23d1675eec2583a366813be0496d6fed" prot="protected" virt="non-virtual"><scope>pars::ev::common_kind</scope><name>metadata_m</name></member>
      <member refid="structpars_1_1ev_1_1common__kind_1aedd3fb812f5a8c9a2042cfb498feecb2" prot="public" virt="non-virtual"><scope>pars::ev::common_kind</scope><name>metadata_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
