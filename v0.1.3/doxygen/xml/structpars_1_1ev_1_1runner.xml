<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structpars_1_1ev_1_1runner" kind="struct" language="C++" prot="public">
    <compoundname>pars::ev::runner</compoundname>
    <includes refid="runner_8h" local="no">runner.h</includes>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structpars_1_1ev_1_1runner_1a3e8d4b441a58c1d6b40cad75f0d34aa3" prot="private" static="no">
        <type>std::tuple&lt; std::size_t, int, std::size_t, std::future&lt; void &gt; &gt;</type>
        <definition>using pars::ev::runner::futures_value_type = 
    std::tuple&lt;std::size_t, int, std::size_t, std::future&lt;void&gt;&gt;</definition>
        <argsstring></argsstring>
        <name>futures_value_type</name>
        <qualifiedname>pars::ev::runner::futures_value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="326" column="3" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="326" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structpars_1_1ev_1_1runner_1ab02adab34bf6cd4cb56884c51e00dd0d" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex pars::ev::runner::mtx_m</definition>
        <argsstring></argsstring>
        <name>mtx_m</name>
        <qualifiedname>pars::ev::runner::mtx_m</qualifiedname>
        <briefdescription>
<para>protects futures_m, threads_m </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="324" column="14" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpars_1_1ev_1_1runner_1af4c6e2bc357b089ca75f12bf407113fe" prot="private" static="no" mutable="no">
        <type>std::vector&lt; futures_value_type &gt;</type>
        <definition>std::vector&lt;futures_value_type&gt; pars::ev::runner::futures_m</definition>
        <argsstring></argsstring>
        <name>futures_m</name>
        <qualifiedname>pars::ev::runner::futures_m</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>all job ids, socket ids, spec hashes and futures from threads that are running </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="330" column="5" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpars_1_1ev_1_1runner_1ac33db9e975f302f06ffa9fa371c10dff" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::size_t, std::jthread &gt;</type>
        <definition>std::unordered_map&lt;std::size_t, std::jthread&gt; pars::ev::runner::threads_m</definition>
        <argsstring></argsstring>
        <name>threads_m</name>
        <qualifiedname>pars::ev::runner::threads_m</qualifiedname>
        <briefdescription>
<para>the jthread for a given job id, if any </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="334" column="5" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpars_1_1ev_1_1runner_1ab1a5e6e09ba073aeaf658ae1caeaf8c5" prot="private" static="no" mutable="no">
        <type><ref refid="structpars_1_1ev_1_1hf__registry" kindref="compound">hf_registry</ref> &amp;</type>
        <definition>hf_registry&amp; pars::ev::runner::hf_registry_m</definition>
        <argsstring></argsstring>
        <name>hf_registry_m</name>
        <qualifiedname>pars::ev::runner::hf_registry_m</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="336" column="15" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpars_1_1ev_1_1runner_1a0c688b1809b0b39fd053a1270ed91e34" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; int, std::vector&lt; std::size_t &gt; &gt;</type>
        <definition>std::unordered_map&lt;int, std::vector&lt;std::size_t&gt; &gt; pars::ev::runner::pipe_jobs_m</definition>
        <argsstring></argsstring>
        <name>pipe_jobs_m</name>
        <qualifiedname>pars::ev::runner::pipe_jobs_m</qualifiedname>
        <briefdescription>
<para>all queued ids of jobs for a given pipe id </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="339" column="5" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpars_1_1ev_1_1runner_1aa4f3b178807eb2d0dd53d16be889ba6d" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; std::size_t &gt;</type>
        <definition>std::atomic&lt;std::size_t&gt; pars::ev::runner::next_job_id_m</definition>
        <argsstring></argsstring>
        <name>next_job_id_m</name>
        <qualifiedname>pars::ev::runner::next_job_id_m</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="341" column="15" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="341" bodyend="341"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a349df8c8d06a15a6ab9bd2dde7f85c3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pars::ev::runner::runner</definition>
        <argsstring>(hf_registry &amp;hfs)</argsstring>
        <name>runner</name>
        <qualifiedname>pars::ev::runner::runner</qualifiedname>
        <param>
          <type><ref refid="structpars_1_1ev_1_1hf__registry" kindref="compound">hf_registry</ref> &amp;</type>
          <declname>hfs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="47" column="3" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a530562da38da9d1236803c670705959e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t pars::ev::runner::next_job_id</definition>
        <argsstring>()</argsstring>
        <name>next_job_id</name>
        <qualifiedname>pars::ev::runner::next_job_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="52" column="15" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="52" bodyend="52"/>
        <referencedby refid="structpars_1_1ev_1_1runner_1a68cb34be52ee194f0c43cfd0e21de906" compoundref="runner_8h" startline="144" endline="147">exec</referencedby>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1abcf0dc254df4dc39ccd71d1f995f5d27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars::ev::runner::start_thread</definition>
        <argsstring>(std::size_t spec_hash, std::packaged_task&lt; void(std::stop_token, job)&gt; task, job j)</argsstring>
        <name>start_thread</name>
        <qualifiedname>pars::ev::runner::start_thread</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>spec_hash</declname>
        </param>
        <param>
          <type>std::packaged_task&lt; void(std::stop_token, <ref refid="classpars_1_1ev_1_1job" kindref="compound">job</ref>)&gt;</type>
          <declname>task</declname>
        </param>
        <param>
          <type><ref refid="classpars_1_1ev_1_1job" kindref="compound">job</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="54" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="54" bodyend="69"/>
        <references refid="classpars_1_1ev_1_1job_1a41155821180189773234cab1826b8ab3" compoundref="job_8h" startline="89" endline="89">pars::ev::job::id</references>
        <references refid="classpars_1_1ev_1_1job_1aae533d6b0f37befa2eaca26c4b5e161c" compoundref="job_8h" startline="91" endline="91">pars::ev::job::socket_id</references>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1aa0c18ceb9e196d984b868cacf5a08940" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto pars::ev::runner::count_threads</definition>
        <argsstring>()</argsstring>
        <name>count_threads</name>
        <qualifiedname>pars::ev::runner::count_threads</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="71" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a1335c45a40aca1a69e435fa8f269fdcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars::ev::runner::stop_all_threads</definition>
        <argsstring>()</argsstring>
        <name>stop_all_threads</name>
        <qualifiedname>pars::ev::runner::stop_all_threads</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="78" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="78" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a48007dd1644ccce4952c31c0b5987a62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pars::ev::runner::can_exec</definition>
        <argsstring>(int s_id, std::size_t spec_hash)</argsstring>
        <name>can_exec</name>
        <qualifiedname>pars::ev::runner::can_exec</qualifiedname>
        <param>
          <type>int</type>
          <declname>s_id</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>spec_hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="94" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a95f7f53cfd50512ecc8412b59ed133e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars::ev::runner::exec</definition>
        <argsstring>(job j)</argsstring>
        <name>exec</name>
        <qualifiedname>pars::ev::runner::exec</qualifiedname>
        <param>
          <type><ref refid="classpars_1_1ev_1_1job" kindref="compound">job</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="101" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="101" bodyend="140"/>
        <references refid="namespacepars_1acf366c3b2c7f2027ca1f4694e783ecb1" compoundref="log_8h" startline="132" endline="137">pars::debug</references>
        <references refid="namespacepars_1a2f1cf1eb41879a6841dc516a92bcf35f" compoundref="log_8h" startline="214" endline="218">pars::err</references>
        <references refid="namespacepars_1a12232d6f4a47a54243d1c224c421b535a4119639092e62c55ea8be348e4d9260d" compoundref="flags_8h" startline="41">pars::event</references>
        <references refid="classpars_1_1ev_1_1job_1a41155821180189773234cab1826b8ab3" compoundref="job_8h" startline="89" endline="89">pars::ev::job::id</references>
        <references refid="log_8h_1ad71aeb03d03709c5072b99cb68c21992" compoundref="log_8h" startline="61">SL</references>
        <references refid="classpars_1_1ev_1_1job_1aae533d6b0f37befa2eaca26c4b5e161c" compoundref="job_8h" startline="91" endline="91">pars::ev::job::socket_id</references>
        <references refid="classpars_1_1ev_1_1job_1aff37b681c04723903c874d551940e676" compoundref="job_8h" startline="93" endline="93">pars::ev::job::spec_hash</references>
        <referencedby refid="structpars_1_1ev_1_1runner_1a68cb34be52ee194f0c43cfd0e21de906" compoundref="runner_8h" startline="144" endline="147">exec</referencedby>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a68cb34be52ee194f0c43cfd0e21de906" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>kind_of</declname>
            <defname>kind_of</defname>
          </param>
          <param>
            <type>event_c</type>
            <declname>event_t</declname>
            <defname>event_t</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void pars::ev::runner::exec</definition>
        <argsstring>(kind_of&lt; event_t &gt; ke)</argsstring>
        <name>exec</name>
        <qualifiedname>pars::ev::runner::exec</qualifiedname>
        <param>
          <type>kind_of&lt; event_t &gt;</type>
          <declname>ke</declname>
        </param>
    <requiresclause>kind_c&lt;kind_of&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="144" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="144" bodyend="147"/>
        <references refid="structpars_1_1ev_1_1runner_1a95f7f53cfd50512ecc8412b59ed133e0" compoundref="runner_8h" startline="101" endline="140">exec</references>
        <references refid="structpars_1_1ev_1_1runner_1a530562da38da9d1236803c670705959e" compoundref="runner_8h" startline="52" endline="52">next_job_id</references>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a3565ef71b0258a5089ac789d96f916a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars::ev::runner::add_pipe</definition>
        <argsstring>(const net::pipe &amp;p)</argsstring>
        <name>add_pipe</name>
        <qualifiedname>pars::ev::runner::add_pipe</qualifiedname>
        <param>
          <type>const <ref refid="classpars_1_1net_1_1pipe" kindref="compound">net::pipe</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="149" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="149" bodyend="156"/>
        <references refid="classpars_1_1net_1_1pipe_1a1e8d61f123efea7d9656bd7bcefbbc65" compoundref="pipe_8h" startline="57" endline="57">pars::net::pipe::id</references>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1aa1649e683c45f6ca32dd2b8f9a1b3ca5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars::ev::runner::remove_pipe</definition>
        <argsstring>(const net::pipe &amp;p)</argsstring>
        <name>remove_pipe</name>
        <qualifiedname>pars::ev::runner::remove_pipe</qualifiedname>
        <param>
          <type>const <ref refid="classpars_1_1net_1_1pipe" kindref="compound">net::pipe</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>stop all running and remove all pending jobs for pipe p </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="159" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="159" bodyend="172"/>
        <references refid="classpars_1_1net_1_1pipe_1a1e8d61f123efea7d9656bd7bcefbbc65" compoundref="pipe_8h" startline="57" endline="57">pars::net::pipe::id</references>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1ab891cb3dfcd6fc058d9ffda7c74a6331" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars::ev::runner::associate_job_to_pipe</definition>
        <argsstring>(const int j_id, const int p_id)</argsstring>
        <name>associate_job_to_pipe</name>
        <qualifiedname>pars::ev::runner::associate_job_to_pipe</qualifiedname>
        <param>
          <type>const int</type>
          <declname>j_id</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>p_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="174" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="174" bodyend="194"/>
        <references refid="namespacepars_1acf366c3b2c7f2027ca1f4694e783ecb1" compoundref="log_8h" startline="132" endline="137">pars::debug</references>
        <references refid="namespacepars_1a12232d6f4a47a54243d1c224c421b535a4119639092e62c55ea8be348e4d9260d" compoundref="flags_8h" startline="41">pars::event</references>
        <references refid="log_8h_1ad71aeb03d03709c5072b99cb68c21992" compoundref="log_8h" startline="61">SL</references>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1ae49e83074f4032f87e7bbd2d47bf3ed9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars::ev::runner::stop_thread</definition>
        <argsstring>(const int j_id)</argsstring>
        <name>stop_thread</name>
        <qualifiedname>pars::ev::runner::stop_thread</qualifiedname>
        <param>
          <type>const int</type>
          <declname>j_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="196" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="196" bodyend="202"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a59ff92e9ac2c1b8de0367c63b73282d0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_set&lt; std::size_t &gt;</type>
        <definition>std::unordered_set&lt; std::size_t &gt; pars::ev::runner::stop_runnings</definition>
        <argsstring>(std::vector&lt; std::size_t &gt; j_ids)</argsstring>
        <name>stop_runnings</name>
        <qualifiedname>pars::ev::runner::stop_runnings</qualifiedname>
        <param>
          <type>std::vector&lt; std::size_t &gt;</type>
          <declname>j_ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="205" column="22" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="205" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1aea3e1cbc7c90537c98bd501d4a398b77" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars::ev::runner::process_futures</definition>
        <argsstring>()</argsstring>
        <name>process_futures</name>
        <qualifiedname>pars::ev::runner::process_futures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="226" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="226" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a72f555920399c74fb832d95e82074703" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars::ev::runner::process_exception</definition>
        <argsstring>(auto s_id, auto spec_hash)</argsstring>
        <name>process_exception</name>
        <qualifiedname>pars::ev::runner::process_exception</qualifiedname>
        <param>
          <type>auto</type>
          <declname>s_id</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>spec_hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="262" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="262" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a869abc3c2aa23288cce10bbf8f1179d1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars::ev::runner::request_stop</definition>
        <argsstring>(const std::size_t j_id)</argsstring>
        <name>request_stop</name>
        <qualifiedname>pars::ev::runner::request_stop</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>j_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="309" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a46bdf5b71968ea88d87c9cfc242d072c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pars::ev::runner::thread_running</definition>
        <argsstring>(const std::size_t j_id)</argsstring>
        <name>thread_running</name>
        <qualifiedname>pars::ev::runner::thread_running</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>j_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="314" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="structpars_1_1ev_1_1runner_1a86323743d9192a264008da8a43e6fd15" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pars::ev::runner::stop_possible</definition>
        <argsstring>(const std::size_t j_id)</argsstring>
        <name>stop_possible</name>
        <qualifiedname>pars::ev::runner::stop_possible</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>j_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="319" column="8" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="319" bodyend="322"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" line="44" column="1" bodyfile="/home/runner/work/pars/pars/lib/include/pars/ev/runner.h" bodystart="45" bodyend="342"/>
    <listofallmembers>
      <member refid="structpars_1_1ev_1_1runner_1a3565ef71b0258a5089ac789d96f916a2" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>add_pipe</name></member>
      <member refid="structpars_1_1ev_1_1runner_1ab891cb3dfcd6fc058d9ffda7c74a6331" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>associate_job_to_pipe</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a48007dd1644ccce4952c31c0b5987a62" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>can_exec</name></member>
      <member refid="structpars_1_1ev_1_1runner_1aa0c18ceb9e196d984b868cacf5a08940" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>count_threads</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a95f7f53cfd50512ecc8412b59ed133e0" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>exec</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a68cb34be52ee194f0c43cfd0e21de906" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>exec</name></member>
      <member refid="structpars_1_1ev_1_1runner_1af4c6e2bc357b089ca75f12bf407113fe" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>futures_m</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a3e8d4b441a58c1d6b40cad75f0d34aa3" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>futures_value_type</name></member>
      <member refid="structpars_1_1ev_1_1runner_1ab1a5e6e09ba073aeaf658ae1caeaf8c5" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>hf_registry_m</name></member>
      <member refid="structpars_1_1ev_1_1runner_1ab02adab34bf6cd4cb56884c51e00dd0d" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>mtx_m</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a530562da38da9d1236803c670705959e" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>next_job_id</name></member>
      <member refid="structpars_1_1ev_1_1runner_1aa4f3b178807eb2d0dd53d16be889ba6d" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>next_job_id_m</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a0c688b1809b0b39fd053a1270ed91e34" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>pipe_jobs_m</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a72f555920399c74fb832d95e82074703" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>process_exception</name></member>
      <member refid="structpars_1_1ev_1_1runner_1aea3e1cbc7c90537c98bd501d4a398b77" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>process_futures</name></member>
      <member refid="structpars_1_1ev_1_1runner_1aa1649e683c45f6ca32dd2b8f9a1b3ca5" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>remove_pipe</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a869abc3c2aa23288cce10bbf8f1179d1" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>request_stop</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a349df8c8d06a15a6ab9bd2dde7f85c3d" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>runner</name></member>
      <member refid="structpars_1_1ev_1_1runner_1abcf0dc254df4dc39ccd71d1f995f5d27" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>start_thread</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a1335c45a40aca1a69e435fa8f269fdcd" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>stop_all_threads</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a86323743d9192a264008da8a43e6fd15" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>stop_possible</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a59ff92e9ac2c1b8de0367c63b73282d0" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>stop_runnings</name></member>
      <member refid="structpars_1_1ev_1_1runner_1ae49e83074f4032f87e7bbd2d47bf3ed9" prot="public" virt="non-virtual"><scope>pars::ev::runner</scope><name>stop_thread</name></member>
      <member refid="structpars_1_1ev_1_1runner_1a46bdf5b71968ea88d87c9cfc242d072c" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>thread_running</name></member>
      <member refid="structpars_1_1ev_1_1runner_1ac33db9e975f302f06ffa9fa371c10dff" prot="private" virt="non-virtual"><scope>pars::ev::runner</scope><name>threads_m</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
