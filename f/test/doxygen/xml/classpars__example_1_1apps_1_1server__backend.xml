<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classpars__example_1_1apps_1_1server__backend" kind="class" language="C++" prot="public">
    <compoundname>pars_example::apps::server_backend</compoundname>
    <basecompoundref refid="classpars_1_1app_1_1single" prot="public" virt="non-virtual">pars::app::single&lt; comp::backend &gt;</basecompoundref>
    <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classpars__example_1_1apps_1_1server__backend_1a4c059d355400630f905fbed7683c0d62" prot="private" static="no">
        <type><ref refid="classpars_1_1app_1_1single_1a16a90aa8cba44a9613d0d114b27413f1" kindref="member">self_type</ref></type>
        <definition>using pars_example::apps::server_backend::parent_type =  self_type</definition>
        <argsstring></argsstring>
        <name>parent_type</name>
        <qualifiedname>pars_example::apps::server_backend::parent_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="45" column="3" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpars__example_1_1apps_1_1server__backend_1a961e05515ccffe1c8c2f16d332753548" prot="private" static="no">
        <type><ref refid="classpars__example_1_1apps_1_1server__backend" kindref="compound">server_backend</ref></type>
        <definition>using pars_example::apps::server_backend::self =  server_backend</definition>
        <argsstring></argsstring>
        <name>self</name>
        <qualifiedname>pars_example::apps::server_backend::self</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="46" column="3" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Network Parameters</header>
      <memberdef kind="variable" id="classpars__example_1_1apps_1_1server__backend_1a6c9dbea1608c09b5a804641d296a092f" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespacepars_1a17d3c52fa100a5b6caccfd12f1dbccf2" kindref="member">milli</ref></type>
        <definition>const milli pars_example::apps::server_backend::cleanup_timeout</definition>
        <argsstring></argsstring>
        <name>cleanup_timeout</name>
        <qualifiedname>pars_example::apps::server_backend::cleanup_timeout</qualifiedname>
        <initializer>{1000}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="50" column="15" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="variable" id="classpars__example_1_1apps_1_1server__backend_1af72042ac311b5d54e8057b555aacdcfa" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespacepars_1a17d3c52fa100a5b6caccfd12f1dbccf2" kindref="member">milli</ref></type>
        <definition>const milli pars_example::apps::server_backend::rep_recv_timeout</definition>
        <argsstring></argsstring>
        <name>rep_recv_timeout</name>
        <qualifiedname>pars_example::apps::server_backend::rep_recv_timeout</qualifiedname>
        <initializer>{-1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="51" column="15" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="variable" id="classpars__example_1_1apps_1_1server__backend_1aa33c6f4468c80bb8d4335e6778869578" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespacepars_1a17d3c52fa100a5b6caccfd12f1dbccf2" kindref="member">milli</ref></type>
        <definition>const milli pars_example::apps::server_backend::rep_send_timeout</definition>
        <argsstring></argsstring>
        <name>rep_send_timeout</name>
        <qualifiedname>pars_example::apps::server_backend::rep_send_timeout</qualifiedname>
        <initializer>{1000}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="52" column="15" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="52" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Input Parameters</header>
      <memberdef kind="variable" id="classpars__example_1_1apps_1_1server__backend_1a84bb76792c419b5998d142dbecb366e0" prot="private" static="no" mutable="no">
        <type>component_type::connect_p</type>
        <definition>component_type::connect_p pars_example::apps::server_backend::connect_p</definition>
        <argsstring></argsstring>
        <name>connect_p</name>
        <qualifiedname>pars_example::apps::server_backend::connect_p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="56" column="29" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpars__example_1_1apps_1_1server__backend_1a10cf008d1ca47c6e8d9942c0b96e51cc" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int pars_example::apps::server_backend::max_allowed</definition>
        <argsstring></argsstring>
        <name>max_allowed</name>
        <qualifiedname>pars_example::apps::server_backend::max_allowed</qualifiedname>
        <initializer>{128}</initializer>
        <briefdescription>
<para>concurrent contextes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="57" column="7" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="variable" id="classpars__example_1_1apps_1_1server__backend_1a87b0b6aed8eebf41f7a1479e4df1f64a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int pars_example::apps::server_backend::max_served</definition>
        <argsstring></argsstring>
        <name>max_served</name>
        <qualifiedname>pars_example::apps::server_backend::max_served</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
<para>shutdown when reached (0 = inf) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="58" column="7" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>App State</header>
      <memberdef kind="variable" id="classpars__example_1_1apps_1_1server__backend_1a9532ce52f8406b930a196b28aff8decd" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; int &gt;</type>
        <definition>std::atomic&lt;int&gt; pars_example::apps::server_backend::tot_served</definition>
        <argsstring></argsstring>
        <name>tot_served</name>
        <qualifiedname>pars_example::apps::server_backend::tot_served</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
<para>total client served </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="62" column="15" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="variable" id="classpars__example_1_1apps_1_1server__backend_1a59e3e4691ef250fee3e64a948c7e73ca" prot="private" static="no" mutable="no">
        <type><ref refid="structpars_1_1app_1_1state__machine" kindref="compound">app::state_machine</ref>&lt; <ref refid="namespacepars__example_1_1resource_1af67f09960f255f2e76daa4d5afdfcd7b" kindref="member">server_state</ref> &gt;</type>
        <definition>app::state_machine&lt;server_state&gt; pars_example::apps::server_backend::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <qualifiedname>pars_example::apps::server_backend::state</qualifiedname>
        <initializer>= {server_state::creating}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="63" column="22" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="variable" id="classpars__example_1_1apps_1_1server__backend_1ad49cc6821b9d22d4c9d469c5f098f202" prot="private" static="no" mutable="no">
        <type><ref refid="classpars_1_1app_1_1resources" kindref="compound">app::resources</ref>&lt; int, <ref refid="structpars__example_1_1resource_1_1pipe__resource" kindref="compound">pipe_resource</ref> &gt;</type>
        <definition>app::resources&lt;int, pipe_resource&gt; pars_example::apps::server_backend::resources</definition>
        <argsstring></argsstring>
        <name>resources</name>
        <qualifiedname>pars_example::apps::server_backend::resources</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="64" column="18" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Initialization</header>
      <memberdef kind="function" id="classpars__example_1_1apps_1_1server__backend_1ab13d5c9453306aa62bd79cd313e39975" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void pars_example::apps::server_backend::startup</definition>
        <argsstring>(int argc, char **argv) override</argsstring>
        <name>startup</name>
        <qualifiedname>pars_example::apps::server_backend::startup</qualifiedname>
        <reimplements refid="classpars_1_1app_1_1single_1a4726da2778bc7b1f9f4e5312d8b19fbb">startup</reimplements>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>create state transition</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>grab the input</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>insert handler functions</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>commit state transition</para>
</listitem></orderedlist>
</para>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="72" column="8" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="72" bodyend="127"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Handler Functions</header>
      <memberdef kind="function" id="classpars__example_1_1apps_1_1server__backend_1af25fb536374b2a81a6373f34e279c6c9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars_example::apps::server_backend::initialize</definition>
        <argsstring>(hf_arg&lt; fired, init &gt; fired)</argsstring>
        <name>initialize</name>
        <qualifiedname>pars_example::apps::server_backend::initialize</qualifiedname>
        <param>
          <type><ref refid="namespacepars_1_1ev_1ada8ba2faa8e8f8b6a385eb2156e52613" kindref="member">hf_arg</ref>&lt; <ref refid="structpars_1_1ev_1_1fired" kindref="compound">fired</ref>, <ref refid="structpars_1_1ev_1_1init" kindref="compound">init</ref> &gt;</type>
          <declname>fired</declname>
        </param>
        <briefdescription>
<para>spawn all contexts and start a recv operation on each of them </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="132" column="8" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="132" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classpars__example_1_1apps_1_1server__backend_1ad9f2faa15f0dd1ac6290c4b78ea50177" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars_example::apps::server_backend::accept_pipe</definition>
        <argsstring>(hf_arg&lt; fired, creating_pipe &gt; fired)</argsstring>
        <name>accept_pipe</name>
        <qualifiedname>pars_example::apps::server_backend::accept_pipe</qualifiedname>
        <param>
          <type><ref refid="namespacepars_1_1ev_1ada8ba2faa8e8f8b6a385eb2156e52613" kindref="member">hf_arg</ref>&lt; <ref refid="structpars_1_1ev_1_1fired" kindref="compound">fired</ref>, <ref refid="structpars_1_1ev_1_1creating__pipe" kindref="compound">creating_pipe</ref> &gt;</type>
          <declname>fired</declname>
        </param>
        <briefdescription>
<para>accept or reject client </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="148" column="8" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="148" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classpars__example_1_1apps_1_1server__backend_1af54ba0df2eec648d2d1682cac81ebda3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars_example::apps::server_backend::log_new_pipe</definition>
        <argsstring>(hf_arg&lt; fired, pipe_created &gt; fired)</argsstring>
        <name>log_new_pipe</name>
        <qualifiedname>pars_example::apps::server_backend::log_new_pipe</qualifiedname>
        <param>
          <type><ref refid="namespacepars_1_1ev_1ada8ba2faa8e8f8b6a385eb2156e52613" kindref="member">hf_arg</ref>&lt; <ref refid="structpars_1_1ev_1_1fired" kindref="compound">fired</ref>, <ref refid="structpars_1_1ev_1_1pipe__created" kindref="compound">pipe_created</ref> &gt;</type>
          <declname>fired</declname>
        </param>
        <briefdescription>
<para>log connected client </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="173" column="8" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="173" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classpars__example_1_1apps_1_1server__backend_1a08300c9556fd4522279e54e504b6f7a7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars_example::apps::server_backend::log_rem_pipe</definition>
        <argsstring>(hf_arg&lt; fired, pipe_removed &gt; fired)</argsstring>
        <name>log_rem_pipe</name>
        <qualifiedname>pars_example::apps::server_backend::log_rem_pipe</qualifiedname>
        <param>
          <type><ref refid="namespacepars_1_1ev_1ada8ba2faa8e8f8b6a385eb2156e52613" kindref="member">hf_arg</ref>&lt; <ref refid="structpars_1_1ev_1_1fired" kindref="compound">fired</ref>, <ref refid="structpars_1_1ev_1_1pipe__removed" kindref="compound">pipe_removed</ref> &gt;</type>
          <declname>fired</declname>
        </param>
        <briefdescription>
<para>log client disconnected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="183" column="8" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="183" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classpars__example_1_1apps_1_1server__backend_1a9889b3d74e55b28805f129601c0b8105" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars_example::apps::server_backend::fire_compute</definition>
        <argsstring>(hf_arg&lt; received, fib_requested &gt; recv)</argsstring>
        <name>fire_compute</name>
        <qualifiedname>pars_example::apps::server_backend::fire_compute</qualifiedname>
        <param>
          <type><ref refid="namespacepars_1_1ev_1ada8ba2faa8e8f8b6a385eb2156e52613" kindref="member">hf_arg</ref>&lt; <ref refid="structpars_1_1ev_1_1received" kindref="compound">received</ref>, <ref refid="structpars__example_1_1event_1_1fib__requested" kindref="compound">fib_requested</ref> &gt;</type>
          <declname>recv</declname>
        </param>
        <briefdescription>
<para>queue_fire the computation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>return if already working</para>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="193" column="8" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="193" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classpars__example_1_1apps_1_1server__backend_1a92fca6a00289a15b49fb81fc5e53640b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars_example::apps::server_backend::compute_answer</definition>
        <argsstring>(hf_arg&lt; fired, fib_requested &gt; fired)</argsstring>
        <name>compute_answer</name>
        <qualifiedname>pars_example::apps::server_backend::compute_answer</qualifiedname>
        <param>
          <type><ref refid="namespacepars_1_1ev_1ada8ba2faa8e8f8b6a385eb2156e52613" kindref="member">hf_arg</ref>&lt; <ref refid="structpars_1_1ev_1_1fired" kindref="compound">fired</ref>, <ref refid="structpars__example_1_1event_1_1fib__requested" kindref="compound">fib_requested</ref> &gt;</type>
          <declname>fired</declname>
        </param>
        <briefdescription>
<para>compute fib_b then answer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>compute fib_n</para>
<para>send the outcome event using the ctx where we received from</para>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="224" column="8" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="224" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classpars__example_1_1apps_1_1server__backend_1a66f2a5ee0adbdd962315af16b5c84537" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars_example::apps::server_backend::recv_next</definition>
        <argsstring>(hf_arg&lt; sent, fib_computed &gt; sent)</argsstring>
        <name>recv_next</name>
        <qualifiedname>pars_example::apps::server_backend::recv_next</qualifiedname>
        <param>
          <type><ref refid="namespacepars_1_1ev_1ada8ba2faa8e8f8b6a385eb2156e52613" kindref="member">hf_arg</ref>&lt; <ref refid="structpars_1_1ev_1_1sent" kindref="compound">sent</ref>, <ref refid="structpars__example_1_1event_1_1fib__computed" kindref="compound">fib_computed</ref> &gt;</type>
          <declname>sent</declname>
        </param>
        <briefdescription>
<para>start a recv operation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>we&apos;re ready to receive the next work</para>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="274" column="8" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="274" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classpars__example_1_1apps_1_1server__backend_1a82b4c706e47efc6e0700d22d5ca04020" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars_example::apps::server_backend::close_pipe</definition>
        <argsstring>(hf_arg&lt; fired, network_error &gt; fired)</argsstring>
        <name>close_pipe</name>
        <qualifiedname>pars_example::apps::server_backend::close_pipe</qualifiedname>
        <param>
          <type><ref refid="namespacepars_1_1ev_1ada8ba2faa8e8f8b6a385eb2156e52613" kindref="member">hf_arg</ref>&lt; <ref refid="structpars_1_1ev_1_1fired" kindref="compound">fired</ref>, <ref refid="structpars_1_1ev_1_1network__error" kindref="compound">network_error</ref> &gt;</type>
          <declname>fired</declname>
        </param>
        <briefdescription>
<para>close pipe </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="307" column="8" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="307" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classpars__example_1_1apps_1_1server__backend_1a4cc47118b3aa055f7d15ce9a16646b55" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pars_example::apps::server_backend::terminate</definition>
        <argsstring>(hf_arg&lt; fired, shutdown &gt; fired)</argsstring>
        <name>terminate</name>
        <qualifiedname>pars_example::apps::server_backend::terminate</qualifiedname>
        <param>
          <type><ref refid="namespacepars_1_1ev_1ada8ba2faa8e8f8b6a385eb2156e52613" kindref="member">hf_arg</ref>&lt; <ref refid="structpars_1_1ev_1_1fired" kindref="compound">fired</ref>, <ref refid="structpars_1_1ev_1_1shutdown" kindref="compound">shutdown</ref> &gt;</type>
          <declname>fired</declname>
        </param>
        <briefdescription>
<para>graceful terminate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="329" column="8" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="329" bodyend="338"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Runs the backend component as a single application (rep). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>pars::app::single&lt; comp::backend &gt;</label>
        <link refid="classpars_1_1app_1_1single"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>pars::app::with_default_setup</label>
        <link refid="structpars_1_1app_1_1with__default__setup"/>
      </node>
      <node id="1">
        <label>pars_example::apps::server_backend</label>
        <link refid="classpars__example_1_1apps_1_1server__backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>pars::app::single&lt; comp::backend &gt;</label>
        <link refid="classpars_1_1app_1_1single"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>pars::app::with_default_setup</label>
        <link refid="structpars_1_1app_1_1with__default__setup"/>
      </node>
      <node id="1">
        <label>pars_example::apps::server_backend</label>
        <link refid="classpars__example_1_1apps_1_1server__backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/pars/pars/example/server_backend.cpp" line="40" column="1" bodyfile="/home/runner/work/pars/pars/example/server_backend.cpp" bodystart="41" bodyend="339"/>
    <listofallmembers>
      <member refid="classpars__example_1_1apps_1_1server__backend_1ad9f2faa15f0dd1ac6290c4b78ea50177" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>accept_pipe</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a6c9dbea1608c09b5a804641d296a092f" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>cleanup_timeout</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a82b4c706e47efc6e0700d22d5ca04020" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>close_pipe</name></member>
      <member refid="classpars_1_1app_1_1single_1a6fba1df9fd871ebd1cb20a50becdfa3c" prot="protected" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>comp</name></member>
      <member refid="classpars_1_1app_1_1single_1a1c702c626c4e90070855013848155578" prot="public" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>component_type</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a92fca6a00289a15b49fb81fc5e53640b" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>compute_answer</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a84bb76792c419b5998d142dbecb366e0" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>connect_p</name></member>
      <member refid="structpars_1_1app_1_1with__default__setup_1a11ad0a06ff6c0e16378facb9b7d92f9c" prot="public" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>enable_source_loc_logging</name></member>
      <member refid="classpars_1_1app_1_1single_1ac2d8fbc9c1a13b748dcb8cf68ffd8a12" prot="public" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>exec</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a9889b3d74e55b28805f129601c0b8105" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>fire_compute</name></member>
      <member refid="classpars_1_1app_1_1single_1afc90fdc06e69f419da8cb6b5efccbe24" prot="protected" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>graceful_terminate</name></member>
      <member refid="classpars_1_1app_1_1single_1a6b722b1ff17dbb39f60d1e7eae2abc87" prot="protected" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>hfs</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1af25fb536374b2a81a6373f34e279c6c9" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>initialize</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1af54ba0df2eec648d2d1682cac81ebda3" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>log_new_pipe</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a08300c9556fd4522279e54e504b6f7a7" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>log_rem_pipe</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a10cf008d1ca47c6e8d9942c0b96e51cc" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>max_allowed</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a87b0b6aed8eebf41f7a1479e4df1f64a" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>max_served</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a4c059d355400630f905fbed7683c0d62" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>parent_type</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a66f2a5ee0adbdd962315af16b5c84537" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>recv_next</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1af72042ac311b5d54e8057b555aacdcfa" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>rep_recv_timeout</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1aa33c6f4468c80bb8d4335e6778869578" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>rep_send_timeout</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1ad49cc6821b9d22d4c9d469c5f098f202" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>resources</name></member>
      <member refid="classpars_1_1app_1_1single_1a2d155acd16d58aabacf954ab7adb867e" prot="protected" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>router</name></member>
      <member refid="classpars_1_1app_1_1single_1a8a32425819146d8bbabdeed599a4fa8b" prot="protected" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>run</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a961e05515ccffe1c8c2f16d332753548" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>self</name></member>
      <member refid="classpars_1_1app_1_1single_1a16a90aa8cba44a9613d0d114b27413f1" prot="public" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>self_type</name></member>
      <member refid="structpars_1_1app_1_1with__default__setup_1aa5e7958510b529c78aeb832822746b96" prot="public" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>setup</name></member>
      <member refid="classpars_1_1app_1_1single_1a6d09469c97cf8c34cc633ddd8ead2e48" prot="public" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>single</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1ab13d5c9453306aa62bd79cd313e39975" prot="private" virt="virtual"><scope>pars_example::apps::server_backend</scope><name>startup</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a59e3e4691ef250fee3e64a948c7e73ca" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>state</name></member>
      <member refid="classpars_1_1app_1_1single_1a56b98085676e92a4a227bf8456ca9357" prot="protected" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>stop_job_thread</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a4cc47118b3aa055f7d15ce9a16646b55" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>terminate</name></member>
      <member refid="classpars_1_1app_1_1single_1aade2404769da17ed631fffcf07e9e031" prot="protected" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>terminate_now</name></member>
      <member refid="classpars__example_1_1apps_1_1server__backend_1a9532ce52f8406b930a196b28aff8decd" prot="private" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>tot_served</name></member>
      <member refid="structpars_1_1app_1_1with__default__setup_1a8ed90269f5f66e4774fe1facdd9b8ae4" prot="protected" virt="non-virtual"><scope>pars_example::apps::server_backend</scope><name>with_default_setup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
