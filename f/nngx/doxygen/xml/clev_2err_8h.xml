<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="clev_2err_8h" kind="file" language="C++">
    <compoundname>err.h</compoundname>
    <includes local="no">fmt/format.h</includes>
    <includes local="no">nng/nng.h</includes>
    <includes local="no">expected</includes>
    <includes local="no">functional</includes>
    <includedby refid="own_8h" local="yes">/home/runner/work/pars/pars/lib/include/clev/own.h</includedby>
    <includedby refid="nngxx_2err_8h" local="yes">/home/runner/work/pars/pars/lib/include/nngxx/err.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/pars/pars/lib/include/clev/err.h</label>
        <link refid="clev_2err_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>expected</label>
      </node>
      <node id="2">
        <label>fmt/format.h</label>
      </node>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="3">
        <label>nng/nng.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15">
        <label>/home/runner/work/pars/pars/example/client.cpp</label>
        <link refid="client_8cpp"/>
      </node>
      <node id="13">
        <label>/home/runner/work/pars/pars/example/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/runner/work/pars/pars/example/event.h</label>
        <link refid="example_2event_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/runner/work/pars/pars/example/server_backend.cpp</label>
        <link refid="server__backend_8cpp"/>
      </node>
      <node id="1">
        <label>/home/runner/work/pars/pars/lib/include/clev/err.h</label>
        <link refid="clev_2err_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/runner/work/pars/pars/lib/include/clev/own.h</label>
        <link refid="own_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/aio.h</label>
        <link refid="aio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/ctx.h</label>
        <link refid="ctx_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/dialer.h</label>
        <link refid="dialer_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/err.h</label>
        <link refid="nngxx_2err_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/iface/aio.h</label>
        <link refid="iface_2aio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/iface/ctx.h</label>
        <link refid="iface_2ctx_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/iface/dialer.h</label>
        <link refid="iface_2dialer_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/iface/listener.h</label>
        <link refid="iface_2listener_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/iface/msg.h</label>
        <link refid="iface_2msg_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/iface/pipe.h</label>
        <link refid="nngxx_2iface_2pipe_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/iface/socket.h</label>
        <link refid="nngxx_2iface_2socket_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/iface/value.h</label>
        <link refid="nngxx_2iface_2value_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/listener.h</label>
        <link refid="listener_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/msg.h</label>
        <link refid="msg_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/msg_body.h</label>
        <link refid="msg__body_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/msg_header.h</label>
        <link refid="msg__header_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/opt_getter.h</label>
        <link refid="opt__getter_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/opt_setter.h</label>
        <link refid="opt__setter_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/pipe.h</label>
        <link refid="nngxx_2pipe_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/socket.h</label>
        <link refid="nngxx_2socket_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>/home/runner/work/pars/pars/lib/include/nngxx/socket_decl.h</label>
        <link refid="socket__decl_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/runner/work/pars/pars/lib/include/pars/app/single.h</label>
        <link refid="single_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/runner/work/pars/pars/lib/include/pars/comp/backend.h</label>
        <link refid="backend_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/runner/work/pars/pars/lib/include/pars/comp/client.h</label>
        <link refid="client_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/runner/work/pars/pars/lib/include/pars/concept/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/dispatcher.h</label>
        <link refid="dispatcher_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/enqueuer.h</label>
        <link refid="enqueuer_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/event.h</label>
        <link refid="lib_2include_2pars_2ev_2event_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry.h</label>
        <link refid="hf__registry_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/hf_registry__insert.h</label>
        <link refid="hf__registry____insert_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/job.h</label>
        <link refid="job_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/kind.h</label>
        <link refid="ev_2kind_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/kind_base.h</label>
        <link refid="kind__base_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/klass.h</label>
        <link refid="klass_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/runner.h</label>
        <link refid="runner_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>/home/runner/work/pars/pars/lib/include/pars/ev/spec.h</label>
        <link refid="spec_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/runner/work/pars/pars/lib/include/pars/fmt/helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>/home/runner/work/pars/pars/lib/include/pars/fmt/nng.h</label>
        <link refid="nng_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>/home/runner/work/pars/pars/lib/include/pars/fmt/stl.h</label>
        <link refid="stl_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/context_registry.h</label>
        <link refid="context__registry_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/op.h</label>
        <link refid="op_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/pipe.h</label>
        <link refid="pars_2net_2pipe_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/pull.h</label>
        <link refid="pull_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/push.h</label>
        <link refid="push_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/rep.h</label>
        <link refid="rep_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/req.h</label>
        <link refid="req_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/socket.h</label>
        <link refid="pars_2net_2socket_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/home/runner/work/pars/pars/lib/include/pars/net/tool_view.h</label>
        <link refid="tool__view_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/runner/work/pars/pars/lib/include/pars/pars.h</label>
        <link refid="pars_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structclev_1_1exception" prot="public">clev::exception</innerclass>
    <innerclass refid="structclev_1_1unexpected" prot="public">clev::unexpected</innerclass>
    <innerclass refid="structclev_1_1is__expected__specialization" prot="public">clev::is_expected_specialization</innerclass>
    <innerclass refid="structclev_1_1is__expected__specialization_3_01expected__t_3_01value__t_01_4_01_4" prot="public">clev::is_expected_specialization&lt; expected_t&lt; value_t &gt; &gt;</innerclass>
    <innerclass refid="structclev_1_1expected_3_01void_01_4" prot="public">clev::expected&lt; void &gt;</innerclass>
    <innerclass refid="structclev_1_1expected" prot="public">clev::expected</innerclass>
    <innernamespace refid="namespaceclev">clev</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>(c)<sp/>2025<sp/>Giuseppe<sp/>Roberti.</highlight></codeline>
<codeline lineno="3"><highlight class="comment">All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="6"><highlight class="comment">are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="9"><highlight class="comment">list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="13"><highlight class="comment">other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight></codeline>
<codeline lineno="16"><highlight class="comment">may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="17"><highlight class="comment">specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="20"><highlight class="comment">ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="21"><highlight class="comment">WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="22"><highlight class="comment">DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="23"><highlight class="comment">ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="24"><highlight class="comment">(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="25"><highlight class="comment">LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON</highlight></codeline>
<codeline lineno="26"><highlight class="comment">ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="27"><highlight class="comment">(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="28"><highlight class="comment">SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt/format.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nng/nng.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;expected&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespaceclev" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceclev" kindref="compound">clev</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structclev_1_1exception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclev_1_1exception_1a1af7c042e11a6f3c77071ee5988b8b91" kindref="member">exception</ref><sp/>:<sp/>std::runtime_error</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43" refid="structclev_1_1exception_1a1af7c042e11a6f3c77071ee5988b8b91" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1exception_1a1af7c042e11a6f3c77071ee5988b8b91" kindref="member">exception</ref>(std::error_code<sp/>code)<sp/>noexcept</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>std::runtime_error(code.message())</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cpp_exceptions<sp/>&lt;<sp/>199711</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clev_exception_disabled_v<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clev_exception_disabled_v<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">abort_now(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::error_code<sp/>err)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">(clev_exception_disabled_v)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(clev_exception_disabled_v)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::quick_exit(err.value());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>exception{err};</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exit_now(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::error_code<sp/>err)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>std::quick_exit(<ref refid="namespacenngxx_1aa5f67031328417cc6203a01a3d688108" kindref="member">err</ref>.value());</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structclev_1_1unexpected" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclev_1_1unexpected" kindref="compound">unexpected</ref><sp/>:<sp/>std::unexpected&lt;std::error_code&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">parent<sp/>=<sp/>std::unexpected&lt;std::error_code&gt;;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">parent::parent;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_t&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclev_1_1expected" kindref="compound">expected</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="81" refid="structclev_1_1is__expected__specialization" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclev_1_1is__expected__specialization" kindref="compound">is_expected_specialization</ref><sp/>:<sp/>std::false_type</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>expected_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_t&gt;</highlight></codeline>
<codeline lineno="86" refid="structclev_1_1is__expected__specialization_3_01expected__t_3_01value__t_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclev_1_1is__expected__specialization" kindref="compound">is_expected_specialization</ref>&lt;expected_t&lt;value_t&gt;&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>:<sp/>std::is_same&lt;expected_t&lt;value_t&gt;,<sp/>expected&lt;value_t&gt;&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>expected_t&gt;</highlight></codeline>
<codeline lineno="92" refid="namespaceclev_1ac6cbc44586b9a0071f0db70322d6018d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceclev_1ac6cbc44586b9a0071f0db70322d6018d" kindref="member">is_expected_specialization_v</ref><sp/>=</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="structclev_1_1is__expected__specialization" kindref="compound">is_expected_specialization&lt;expected_t&gt;::value</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="96" refid="structclev_1_1expected_3_01void_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclev_1_1expected" kindref="compound">expected</ref>&lt;void&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::expected&lt;void,<sp/>std::error_code&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">parent<sp/>=<sp/>std::expected&lt;void,<sp/>std::error_code&gt;;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">parent::parent;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="structclev_1_1expected_3_01void_01_4_1aca118ea682f6fd7f20aba2a23d5ca29c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1expected_3_01void_01_4_1aca118ea682f6fd7f20aba2a23d5ca29c" kindref="member">or_abort</ref>()<sp/>noexcept(clev_exception_disabled_v)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abort_now(expected::error());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="structclev_1_1expected_3_01void_01_4_1a25663cb98061bb27746e02a7bfd0250a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1expected_3_01void_01_4_1a25663cb98061bb27746e02a7bfd0250a" kindref="member">or_exit</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit_now(expected::error());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>to_value_t&gt;</highlight></codeline>
<codeline lineno="117" refid="structclev_1_1expected_3_01void_01_4_1a0c2c44ba0c911d3155c5edb481f5f9d6" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1expected_3_01void_01_4_1a0c2c44ba0c911d3155c5edb481f5f9d6" kindref="member">transform_to</ref>(to_value_t&amp;&amp;<sp/>v)<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceclev_1a4a8c676aa6064bd705f1b146c66b0167" kindref="member">expected&lt;to_value_t&gt;</ref>(std::move(v));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceclev_1a4a8c676aa6064bd705f1b146c66b0167" kindref="member">expected&lt;to_value_t&gt;</ref>(<ref refid="structclev_1_1unexpected" kindref="compound">unexpected</ref>(std::move(parent::error())));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_t&gt;</highlight></codeline>
<codeline lineno="127" refid="structclev_1_1expected" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclev_1_1expected" kindref="compound">expected</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::expected&lt;value_t,<sp/>std::error_code&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">parent<sp/>=<sp/>std::expected&lt;value_t,<sp/>std::error_code&gt;;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">error_type<sp/>=<sp/>parent::error_type;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">parent::parent;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>expected::value_type&amp;</highlight></codeline>
<codeline lineno="138" refid="structclev_1_1expected_1aafa7a6c9b2cff363c01f432692e8068f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structclev_1_1expected_1aafa7a6c9b2cff363c01f432692e8068f" kindref="member">value_or_abort</ref>()<sp/>&amp;<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">(clev_exception_disabled_v)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abort_now(expected::error());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expected::value();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>expected::value_type&amp;&amp;</highlight></codeline>
<codeline lineno="147" refid="structclev_1_1expected_1a0fb200b194e9f6d45bf4fe7eaebff471" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structclev_1_1expected_1a0fb200b194e9f6d45bf4fe7eaebff471" kindref="member">value_or_abort</ref>()<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">(clev_exception_disabled_v)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abort_now(expected::error());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(expected::value());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected::value_type&amp;</highlight></codeline>
<codeline lineno="156" refid="structclev_1_1expected_1a57f446157703fed7a488086e35bf574b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structclev_1_1expected_1a57f446157703fed7a488086e35bf574b" kindref="member">value_or_abort</ref>()<sp/>const&amp;<sp/>noexcept(clev_exception_disabled_v)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abort_now(expected::error());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expected::value();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected::value_type&amp;&amp;</highlight></codeline>
<codeline lineno="165" refid="structclev_1_1expected_1a51f15a594d2d1e23d8fdafd02314676d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structclev_1_1expected_1a51f15a594d2d1e23d8fdafd02314676d" kindref="member">value_or_abort</ref>()<sp/>const&amp;&amp;<sp/>noexcept(clev_exception_disabled_v)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abort_now(expected::error());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(expected::value());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/><ref refid="structclev_1_1expected" kindref="compound">expected&lt;std::reference_wrapper&lt;value_t&gt;</ref>&gt;</highlight></codeline>
<codeline lineno="174" refid="structclev_1_1expected_1a85bb320ee64f4e18d04aaa7a5c186746" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structclev_1_1expected_1a85bb320ee64f4e18d04aaa7a5c186746" kindref="member">and_assign_to</ref>(value_t&amp;<sp/>dest)<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>std::move(expected::value());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::ref(dest);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1unexpected" kindref="compound">unexpected</ref>{std::move(expected::error())};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>fn_t&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>std::is_constructible_v&lt;error_type,<sp/>error_type&amp;&gt;</highlight></codeline>
<codeline lineno="188" refid="structclev_1_1expected_1a51ee237ba882c8cf1659333bf0c7c9c3" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1expected_1a51ee237ba882c8cf1659333bf0c7c9c3" kindref="member">and_then</ref>(fn_t&amp;&amp;<sp/>f)<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">exp_t<sp/>=<sp/>std::remove_cvref_t&lt;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::invoke_result_t&lt;fn_t,<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(std::move(expected::value()))&gt;&gt;;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="namespaceclev_1ac6cbc44586b9a0071f0db70322d6018d" kindref="member">is_expected_specialization_v&lt;exp_t&gt;</ref>,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expected&lt;value_t&gt;::and_then(fn_t)<sp/>must<sp/>specialize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(std::is_same_v&lt;typename<sp/>exp_t::error_type,<sp/>error_type&gt;,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expected&lt;value_t&gt;::and_then(fn_t)<sp/>requires<sp/>same<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::invoke(std::forward&lt;fn_t&gt;(f),<sp/>std::move(expected::value()));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exp_t{std::unexpect,<sp/>std::move(expected::error())};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>to_value_t&gt;</highlight></codeline>
<codeline lineno="206" refid="structclev_1_1expected_1a37a983f4846350fa09db409c736926f0" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1expected_1a37a983f4846350fa09db409c736926f0" kindref="member">transform_to</ref>()<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceclev_1a4a8c676aa6064bd705f1b146c66b0167" kindref="member">expected&lt;to_value_t&gt;</ref>(std::move(parent::value()));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceclev_1a4a8c676aa6064bd705f1b146c66b0167" kindref="member">expected&lt;to_value_t&gt;</ref>(<ref refid="structclev_1_1unexpected" kindref="compound">unexpected</ref>(std::move(parent::error())));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>to_value_t&gt;</highlight></codeline>
<codeline lineno="215" refid="structclev_1_1expected_1ab27fde633b8851415459b789542362b6" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1expected_1ab27fde633b8851415459b789542362b6" kindref="member">transform_to</ref>(to_value_t&amp;&amp;<sp/>v)<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceclev_1a4a8c676aa6064bd705f1b146c66b0167" kindref="member">expected&lt;value_t&gt;</ref>(std::move(v));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="structclev_1_1expected_1afc903d688dd32154b8bec104f9e6b5be" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1expected_1afc903d688dd32154b8bec104f9e6b5be" kindref="member">discard_value</ref>()<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1expected" kindref="compound">expected&lt;void&gt;</ref>{};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1expected" kindref="compound">expected&lt;void&gt;</ref>{std::unexpect,<sp/>expected::error()};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_t&gt;</highlight></codeline>
<codeline lineno="233" refid="namespaceclev_1a4a8c676aa6064bd705f1b146c66b0167" refkind="member"><highlight class="normal"><ref refid="namespaceclev_1a4a8c676aa6064bd705f1b146c66b0167" kindref="member">expected</ref>(value_t&amp;&amp;)<sp/>-&gt;<sp/><ref refid="structclev_1_1expected" kindref="compound">expected&lt;value_t&gt;</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>enum_t&gt;</highlight></codeline>
<codeline lineno="236" refid="namespaceclev_1a14c9cc7c4e2eca319598be60a47f4186" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1expected" kindref="compound">clev::expected&lt;void&gt;</ref><sp/><ref refid="namespaceclev_1a14c9cc7c4e2eca319598be60a47f4186" kindref="member">make_expected</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structclev_1_1unexpected" kindref="compound">clev::unexpected</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">enum_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>clev</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/pars/pars/lib/include/clev/err.h"/>
  </compounddef>
</doxygen>
